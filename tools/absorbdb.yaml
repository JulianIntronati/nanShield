db:
  build: 1.13.2.31882
  path: .dbcache
  tables:
    - spell
    - spelleffect
    - spellname
    - table: spelllevels
      index_col: SpellID
queries:
  effects:
    index_col: spellId
    sql: |
      select
        spelleffect.SpellID as "spellId",
        spelleffect.EffectBasePoints as "basePoints",
        spelleffect.EffectRealPointsPerLevel as "pointsPerLevel",
        spelleffect."EffectMiscValue[0]" as "school",
        ifnull(spelllevels.BaseLevel, 0) as "baseLevel",
        ifnull(spelllevels.MaxLevel, 0) as "maxLevel",
        ifnull(spelllevels.SpellLevel, 0) as "spellLevel",
        spellname.Name_lang as "name",
        spell.NameSubtext_lang as "rank"
      from spelleffect
      left join spell on spelleffect.SpellID = spell.ID
      left join spellname on spelleffect.SpellID = spellname.ID
      left join spelllevels on spelleffect.SpellID = spelllevels.SpellID
      where spelleffect.EffectAura = 69
      order by spelleffect.SpellID
output:
  absorbdb:
    file: pkg/absorbdb.lua
    format: jinja2
    template: |
      aura_env.absorb_db = {
      -- This table is automatically generated by wowdb-query
      --  [spellId] = {
      --    [1] = basePoints,
      --    [2] = pointsPerLevel,
      --    [3] = school,
      --    [4] = baseLevel,
      --    [5] = maxLevel,
      --    [6] = spellLevel
      --  }
      {%- for spellId, effect in effects.items() %}
          [{{ "{:>6}".format(spellId) }}] = {
              {{- "{:>6g}".format(effect.basePoints) -}},
              {{- "{:>5g}".format(effect.pointsPerLevel) -}},
              {{- "{:>4}".format(effect.school) -}},
              {{- "{:>3}".format(effect.baseLevel) -}},
              {{- "{:>3}".format(effect.maxLevel) -}},
              {{- "{:>3}".format(effect.spellLevel) -}}
          }, --
          {{- effect.name }}
          {%- if effect.rank%} ({{ effect.rank }}){% endif %}
      {%- endfor %}
      }
